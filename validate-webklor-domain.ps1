# üîç Validation Configuration WebKlor.com
# Date: 27 mai 2025

Write-Host "üîç VALIDATION WEBKLOR.COM" -ForegroundColor Green
Write-Host "==========================" -ForegroundColor Green

# 1. Test DNS
Write-Host "`n1Ô∏è‚É£ V√©rification DNS..." -ForegroundColor Yellow

Write-Host "   Test r√©solution webklor.com:" -ForegroundColor Cyan
$dns1 = nslookup webklor.com 2>&1
Write-Host $dns1

Write-Host "`n   Test r√©solution www.webklor.com:" -ForegroundColor Cyan
$dns2 = nslookup www.webklor.com 2>&1
Write-Host $dns2

# 2. Test connectivit√© HTTP/HTTPS
Write-Host "`n2Ô∏è‚É£ Test connectivit√© web..." -ForegroundColor Yellow

try {
    Write-Host "   Test HTTPS webklor.com:" -ForegroundColor Cyan
    $response1 = Invoke-WebRequest -Uri "https://webklor.com" -Method HEAD -TimeoutSec 10
    Write-Host "   ‚úÖ HTTPS webklor.com : Status $($response1.StatusCode)" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå HTTPS webklor.com : $($_.Exception.Message)" -ForegroundColor Red
}

try {
    Write-Host "   Test HTTPS www.webklor.com:" -ForegroundColor Cyan
    $response2 = Invoke-WebRequest -Uri "https://www.webklor.com" -Method HEAD -TimeoutSec 10
    Write-Host "   ‚úÖ HTTPS www.webklor.com : Status $($response2.StatusCode)" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå HTTPS www.webklor.com : $($_.Exception.Message)" -ForegroundColor Red
}

# 3. Test API
Write-Host "`n3Ô∏è‚É£ Test API..." -ForegroundColor Yellow

try {
    Write-Host "   Test API Health:" -ForegroundColor Cyan
    $apiResponse = Invoke-RestMethod -Uri "https://webklor.com/api/health" -Method GET -TimeoutSec 10
    Write-Host "   ‚úÖ API Health : $($apiResponse.status)" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå API Health : $($_.Exception.Message)" -ForegroundColor Red
}

# 4. Test certificat SSL
Write-Host "`n4Ô∏è‚É£ V√©rification SSL..." -ForegroundColor Yellow

try {
    $certInfo = [System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}
    $webRequest = [System.Net.WebRequest]::Create("https://webklor.com")
    $response = $webRequest.GetResponse()
    Write-Host "   ‚úÖ Certificat SSL : Valide" -ForegroundColor Green
    $response.Close()
} catch {
    Write-Host "   ‚ùå Certificat SSL : $($_.Exception.Message)" -ForegroundColor Red
}

# 5. Statut Vercel
Write-Host "`n5Ô∏è‚É£ Statut Vercel..." -ForegroundColor Yellow
vercel domains ls

# 6. Test performance
Write-Host "`n6Ô∏è‚É£ Test performance..." -ForegroundColor Yellow

$startTime = Get-Date
try {
    $testResponse = Invoke-WebRequest -Uri "https://webklor.com" -TimeoutSec 15
    $endTime = Get-Date
    $loadTime = ($endTime - $startTime).TotalMilliseconds
    Write-Host "   ‚úÖ Temps de chargement : $([math]::Round($loadTime, 2))ms" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå Test performance : $($_.Exception.Message)" -ForegroundColor Red
}

# 7. R√©sultats finaux
Write-Host "`nüìä R√âSUM√â DE VALIDATION" -ForegroundColor Green
Write-Host "========================" -ForegroundColor Green

Write-Host "
üîó URLs √† tester manuellement:
   - https://webklor.com
   - https://www.webklor.com
   - https://webklor.com/api/health
   - https://webklor.com/sitemap.xml
   - https://webklor.com/robots.txt

üìã Checklist finale:
   ‚ñ° DNS pointent vers Vercel
   ‚ñ° HTTPS fonctionne
   ‚ñ° Redirection www ‚Üí non-www (ou inverse)
   ‚ñ° API r√©pond correctement
   ‚ñ° Certificat SSL valide
   ‚ñ° Temps de chargement < 3 secondes
   ‚ñ° Google Analytics fonctionne
   ‚ñ° Google AdSense fonctionne

üéØ Prochaines √©tapes apr√®s validation:
   1. Soumettre sitemap √† Google Search Console
   2. Soumettre le site √† Google AdSense pour approbation
   3. Configurer les redirections si n√©cessaire
   4. Tests utilisateur finaux
" -ForegroundColor White

Write-Host "`nüéâ Validation termin√©e! V√©rifiez les r√©sultats ci-dessus." -ForegroundColor Green
